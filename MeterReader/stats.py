#!/usr/bin/python
# 
# Copyright (C) 2012 - Matt Brown
#
# All rights reserved.
#
# Requires numpy (apt-get install python-numpy).
#
# Calculates basic statistics about the logs generated by logger.py
from numpy import array
import sys
import time

def main():
  if len(sys.argv) < 2:
    sys.stderr.write('Usage: %s /path/to/log [past hours]\n' % sys.argv[0])
    sys.exit(1)

  now = time.time()
  if len(sys.argv) > 2:
    threshold = now - (int(sys.argv[2])*3600)
  else:
    threshold = -1
  earliest = -1
  latest = -1
  intervals = []
  last = -1
  for line in open(sys.argv[1], 'r'):
    if ' OK ' not in line:
      continue
    parts = line.strip().split(' ')
    ts = float(parts[0])
    if threshold != -1 and ts < threshold:
      continue
    if last != -1:
      interval = ts - last
      intervals.append(interval)
    else:
      earliest = ts
      latest = ts
    earliest = min(ts, earliest)
    latest = max(ts, latest)
    last = ts

  print '%d intervals from %s till %s' % (len(intervals),
      time.ctime(earliest), time.ctime(latest))
  d = array(intervals)
  print 'average interval %.02f seconds' % (d.mean())
  print 'interval stddev %.02f seconds' % (d.std())
  print 'minimum interval %.02f seconds' % d.min()
  print 'maximum interval %.02f seconds' % d.max()

if __name__ == "__main__":
  main()

# Vim modeline
# vim: set ts=2 sw=2 sts=2 et: 
